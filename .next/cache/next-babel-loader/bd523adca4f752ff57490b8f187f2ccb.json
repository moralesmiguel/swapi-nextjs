{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\DeveloperSoftware\\\\HyperionDev\\\\Task41-42-NextJSII-III\\\\StarWarsRides\\\\pages\\\\post1.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout.js\";\nimport fetch from \"isomorphic-unfetch\";\nimport Typing from 'react-typing-animation';\n\nvar Post1 = function Post1(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"black-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Typing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"NAME: \", props.starship.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"MODEL: \", props.starship.model), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"STARSHIP CLASS: \", props.starship.starship_class), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"MANUFACTURER: \", props.starship.manufacturer), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"LENGTH: \", props.starship.length), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"MAX ATMOSPHERING SPEED: \", props.starship.max_atmosphering_speed), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"CREW: \", props.starship.crew), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"PASSENGERS: \", props.starship.passengers), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"CARGO CAPACITY: \", props.starship.cargo_capacity), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"HYPERDRIVE RATING: \", props.starship.hyperdrive_rating), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"PRESS ESC to Return\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"one\",\n    onKeyUp: _this.handleKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n};\n\nvar handleKeyPress = function handleKeyPress(event) {\n  if (event.key === 'Enter') {\n    window.location.href = \"/starships\";\n  }\n};\n\nPost1.getInitialProps = function _callee(context) {\n  var id, res, starship;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://swapi.co/api/starships/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          starship = _context.sent;\n          console.log(\"Fetched starship: \".concat(starship.name));\n          return _context.abrupt(\"return\", {\n            starship: starship\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post1;","map":{"version":3,"sources":["D:/DeveloperSoftware/HyperionDev/Task41-42-NextJSII-III/StarWarsRides/pages/post1.js"],"names":["Layout","fetch","Typing","Post1","props","starship","name","model","starship_class","manufacturer","length","max_atmosphering_speed","crew","passengers","cargo_capacity","hyperdrive_rating","handleKeyPress","event","key","window","location","href","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACWA,KAAK,CAACC,QAAN,CAAeC,IAD1B,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWF,KAAK,CAACC,QAAN,CAAeE,KAA1B,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBH,KAAK,CAACC,QAAN,CAAeG,cAAnC,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBJ,KAAK,CAACC,QAAN,CAAeI,YAAjC,CANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYL,KAAK,CAACC,QAAN,CAAeK,MAA3B,CAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA4BN,KAAK,CAACC,QAAN,CAAeM,sBAA3C,CARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUP,KAAK,CAACC,QAAN,CAAeO,IAAzB,CATA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBR,KAAK,CAACC,QAAN,CAAeQ,UAA/B,CAVA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBT,KAAK,CAACC,QAAN,CAAeS,cAAnC,CAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBV,KAAK,CAACC,QAAN,CAAeU,iBAAtC,CAZA,EAY4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZ5D,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbA,EAcA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,KAAtB;AAA4B,IAAA,OAAO,EAAE,KAAI,CAACC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdA,CADJ,CADJ,CADe;AAAA,CAAnB;;AAuBA,IAAMA,cAAc,GAAC,SAAfA,cAAe,CAACC,KAAD,EAAS;AAC1B,MAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA0B;AACtBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,YAArB;AACH;AACJ,CAJD;;AAMAlB,KAAK,CAACmB,eAAN,GAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,EADc,GACRD,OAAO,CAACE,KADA,CACdD,EADc;AAAA;AAAA,2CAEFvB,KAAK,0CAAmCuB,EAAnC,EAFH;;AAAA;AAEdE,UAAAA,GAFc;AAAA;AAAA,2CAGGA,GAAG,CAACC,IAAJ,EAHH;;AAAA;AAGdtB,UAAAA,QAHc;AAKpBuB,UAAAA,OAAO,CAACC,GAAR,6BAAiCxB,QAAQ,CAACC,IAA1C;AALoB,2CAOd;AAACD,YAAAA,QAAQ,EAARA;AAAD,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/Layout.js\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Typing from 'react-typing-animation';\r\n\r\nconst Post1 = props => (\r\n    <Layout>\r\n        <div className=\"black-background\">\r\n            <Typing>\r\n            <h4>\r\n                NAME: {props.starship.name}\r\n            </h4>\r\n            <p>MODEL: {props.starship.model}</p>\r\n            <p>STARSHIP CLASS: {props.starship.starship_class}</p>\r\n            <p>MANUFACTURER: {props.starship.manufacturer}</p>\r\n            <p>LENGTH: {props.starship.length}</p>\r\n            <p>MAX ATMOSPHERING SPEED: {props.starship.max_atmosphering_speed}</p>\r\n            <p>CREW: {props.starship.crew}</p>\r\n            <p>PASSENGERS: {props.starship.passengers}</p>\r\n            <p>CARGO CAPACITY: {props.starship.cargo_capacity}</p>\r\n            <p>HYPERDRIVE RATING: {props.starship.hyperdrive_rating}</p><br />\r\n            <span>PRESS ESC to Return</span>\r\n            <input type=\"text\" id=\"one\" onKeyUp={this.handleKeyPress} />\r\n            </Typing>\r\n        </div>\r\n    </Layout>\r\n);\r\n\r\nconst handleKeyPress=(event)=>{\r\n    if (event.key === 'Enter'){\r\n        window.location.href=\"/starships\"\r\n    }\r\n}\r\n\r\nPost1.getInitialProps = async function(context) {\r\n    const{id} = context.query;\r\n    const res = await fetch(`https://swapi.co/api/starships/${id}`);\r\n    const starship = await res.json();\r\n\r\n    console.log(`Fetched starship: ${starship.name}`);\r\n\r\n    return{starship};\r\n};\r\n\r\nexport default Post1;"]},"metadata":{},"sourceType":"module"}