{"ast":null,"code":"var _jsxFileName = \"D:\\\\DeveloperSoftware\\\\HyperionDev\\\\Task41-42-NextJSII-III\\\\StarWarsRides\\\\pages\\\\post2.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout.js\";\nimport fetch from \"isomorphic-unfetch\";\nimport Typing from 'react-typing-animation';\nimport Error from './_error';\n\nconst Post2 = ({\n  errorCode,\n  species\n}) => {\n  if (errorCode) {\n    return __jsx(Error, {\n      statusCode: errorCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"black-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Typing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"NAME: \", species.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"LANGUAGE: \", species.language), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"CLASSIFICATION: \", species.classification), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"DESIGNATION: \", species.designation), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"AVERAGE HEIGHT: \", species.average_height), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"AVERAGE LIFESPAN: \", species.average_lifespan), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Type any letter in the field and click enter to return\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"three\",\n    onKeyUp: handleKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nconst handleKeyPress = event => {\n  if (event.key === 'Enter') {\n    window.location.href = \"/species\";\n  }\n};\n\nPost2.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://swapi.co/api/species/${id}`);\n  const errorCode = res.statusCode > 200 ? res.statusCode : false;\n  const species = await res.json();\n  console.log(`Fetched species: ${species.name}`);\n  return {\n    errorCode,\n    species: species\n  };\n};\n\nexport default Post2;","map":{"version":3,"sources":["D:/DeveloperSoftware/HyperionDev/Task41-42-NextJSII-III/StarWarsRides/pages/post2.js"],"names":["Layout","fetch","Typing","Error","Post2","errorCode","species","name","language","classification","designation","average_height","average_lifespan","handleKeyPress","event","key","window","location","href","getInitialProps","context","id","query","res","statusCode","json","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AACpC,MAAGD,SAAH,EAAa;AACT,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,OAAO,CAACC,IAAnB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcD,OAAO,CAACE,QAAtB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBF,OAAO,CAACG,cAA5B,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBH,OAAO,CAACI,WAAzB,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBJ,OAAO,CAACK,cAA5B,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBL,OAAO,CAACM,gBAA9B,CANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAPA,EAQA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAEC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CADJ,CADJ,CADA;AAgBC,CApBL;;AAsBA,MAAMA,cAAc,GAAEC,KAAD,IAAS;AAC1B,MAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA0B;AACtBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,UAArB;AACH;AACJ,CAJD;;AAMAd,KAAK,CAACe,eAAN,GAAwB,gBAAeC,OAAf,EAAwB;AAC5C,QAAK;AAACC,IAAAA;AAAD,MAAOD,OAAO,CAACE,KAApB;AACA,QAAMC,GAAG,GAAG,MAAMtB,KAAK,CAAE,gCAA+BoB,EAAG,EAApC,CAAvB;AACA,QAAMhB,SAAS,GAAGkB,GAAG,CAACC,UAAJ,GAAiB,GAAjB,GAAuBD,GAAG,CAACC,UAA3B,GAAwC,KAA1D;AACA,QAAMlB,OAAO,GAAG,MAAMiB,GAAG,CAACE,IAAJ,EAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBrB,OAAO,CAACC,IAAK,EAA7C;AAEA,SAAM;AAACF,IAAAA,SAAD;AAAYC,IAAAA,OAAO,EAACA;AAApB,GAAN;AACH,CATD;;AAWA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/Layout.js\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Typing from 'react-typing-animation';\r\nimport Error from './_error';\r\n\r\nconst Post2 = ({errorCode, species}) => {\r\n    if(errorCode){\r\n        return <Error statusCode={errorCode} />;\r\n    }\r\n    return(\r\n    <Layout>\r\n        <div className=\"black-background\">\r\n            <Typing>\r\n            <h4>NAME: {species.name}</h4>\r\n            <p>LANGUAGE: {species.language}</p>\r\n            <p>CLASSIFICATION: {species.classification}</p>\r\n            <p>DESIGNATION: {species.designation}</p>\r\n            <p>AVERAGE HEIGHT: {species.average_height}</p>\r\n            <p>AVERAGE LIFESPAN: {species.average_lifespan}</p>\r\n            <p>Type any letter in the field and click enter to return</p>\r\n            <input type=\"text\" id=\"three\" onKeyUp={handleKeyPress} />\r\n            </Typing>\r\n        </div>\r\n    </Layout>\r\n    )\r\n    };\r\n\r\nconst handleKeyPress=(event)=>{\r\n    if (event.key === 'Enter'){\r\n        window.location.href=\"/species\"\r\n    }\r\n}\r\n\r\nPost2.getInitialProps = async function(context) {\r\n    const{id} = context.query;\r\n    const res = await fetch(`https://swapi.co/api/species/${id}`);\r\n    const errorCode = res.statusCode > 200 ? res.statusCode : false\r\n    const species = await res.json();\r\n\r\n    console.log(`Fetched species: ${species.name}`);\r\n\r\n    return{errorCode, species:species};\r\n};\r\n\r\nexport default Post2;"]},"metadata":{},"sourceType":"module"}