{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\DeveloperSoftware\\\\HyperionDev\\\\Task41-42-NextJSII-III\\\\StarWarsRides\\\\pages\\\\post2.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout.js\";\nimport fetch from \"isomorphic-unfetch\";\nimport Typing from 'react-typing-animation';\nimport Error from './_error';\n\nvar Post2 = function Post2(_ref) {\n  var errorCode = _ref.errorCode,\n      species = _ref.species;\n\n  if (errorCode) {\n    return __jsx(Error, {\n      statusCode: errorCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"black-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Typing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"NAME: \", species.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"HOMEWORLD: \", species.homeworld), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"LANGUAGE: \", species.language), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"CLASSIFICATION: \", species.classification), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"DESIGNATION: \", species.designation), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"HOMEWORLD: \", species.homeworld), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"AVERAGE HEIGHT: \", species.average_height), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"AVERAGE LIFESPAN: \", species.average_lifespan), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Type any letter in the field and click enter to return\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"three\",\n    onKeyUp: handleKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))));\n};\n\nvar handleKeyPress = function handleKeyPress(event) {\n  if (event.key === 'Enter') {\n    window.location.href = \"/species\";\n  }\n};\n\nPost2.getInitialProps = function _callee(context) {\n  var id, res, errorCode, species;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://swapi.co/api/species/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          errorCode = res.statusCode > 200 ? res.statusCode : false;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          species = _context.sent;\n          console.log(\"Fetched species: \".concat(species.name));\n          return _context.abrupt(\"return\", {\n            errorCode: errorCode,\n            species: species\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post2;","map":{"version":3,"sources":["D:/DeveloperSoftware/HyperionDev/Task41-42-NextJSII-III/StarWarsRides/pages/post2.js"],"names":["Layout","fetch","Typing","Error","Post2","errorCode","species","name","homeworld","language","classification","designation","average_height","average_lifespan","handleKeyPress","event","key","window","location","href","getInitialProps","context","id","query","res","statusCode","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA0B;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,OAAa,QAAbA,OAAa;;AACpC,MAAGD,SAAH,EAAa;AACT,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,OAAO,CAACC,IAAnB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeD,OAAO,CAACE,SAAvB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,OAAO,CAACG,QAAtB,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBH,OAAO,CAACI,cAA5B,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBJ,OAAO,CAACK,WAAzB,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeL,OAAO,CAACE,SAAvB,CANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBF,OAAO,CAACM,cAA5B,CAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBN,OAAO,CAACO,gBAA9B,CARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DATA,EAUA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAEC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CADJ,CADJ,CADA;AAkBC,CAtBL;;AAwBA,IAAMA,cAAc,GAAC,SAAfA,cAAe,CAACC,KAAD,EAAS;AAC1B,MAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA0B;AACtBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,UAArB;AACH;AACJ,CAJD;;AAMAf,KAAK,CAACgB,eAAN,GAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,EADc,GACRD,OAAO,CAACE,KADA,CACdD,EADc;AAAA;AAAA,2CAEFrB,KAAK,wCAAiCqB,EAAjC,EAFH;;AAAA;AAEdE,UAAAA,GAFc;AAGdnB,UAAAA,SAHc,GAGFmB,GAAG,CAACC,UAAJ,GAAiB,GAAjB,GAAuBD,GAAG,CAACC,UAA3B,GAAwC,KAHtC;AAAA;AAAA,2CAIED,GAAG,CAACE,IAAJ,EAJF;;AAAA;AAIdpB,UAAAA,OAJc;AAMpBqB,UAAAA,OAAO,CAACC,GAAR,4BAAgCtB,OAAO,CAACC,IAAxC;AANoB,2CAQd;AAACF,YAAAA,SAAS,EAATA,SAAD;AAAYC,YAAAA,OAAO,EAACA;AAApB,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/Layout.js\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Typing from 'react-typing-animation';\r\nimport Error from './_error';\r\n\r\nconst Post2 = ({errorCode, species}) => {\r\n    if(errorCode){\r\n        return <Error statusCode={errorCode} />;\r\n    }\r\n    return(\r\n    <Layout>\r\n        <div className=\"black-background\">\r\n            <Typing>\r\n            <h4>NAME: {species.name}</h4>\r\n            <p>HOMEWORLD: {species.homeworld}</p>\r\n            <p>LANGUAGE: {species.language}</p>\r\n            <p>CLASSIFICATION: {species.classification}</p>\r\n            <p>DESIGNATION: {species.designation}</p>\r\n            <p>HOMEWORLD: {species.homeworld}</p>\r\n            <p>AVERAGE HEIGHT: {species.average_height}</p>\r\n            <p>AVERAGE LIFESPAN: {species.average_lifespan}</p>\r\n            <p>Type any letter in the field and click enter to return</p>\r\n            <input type=\"text\" id=\"three\" onKeyUp={handleKeyPress} />\r\n            </Typing>\r\n        </div>\r\n    </Layout>\r\n    )\r\n    };\r\n\r\nconst handleKeyPress=(event)=>{\r\n    if (event.key === 'Enter'){\r\n        window.location.href=\"/species\"\r\n    }\r\n}\r\n\r\nPost2.getInitialProps = async function(context) {\r\n    const{id} = context.query;\r\n    const res = await fetch(`https://swapi.co/api/species/${id}`);\r\n    const errorCode = res.statusCode > 200 ? res.statusCode : false\r\n    const species = await res.json();\r\n\r\n    console.log(`Fetched species: ${species.name}`);\r\n\r\n    return{errorCode, species:species};\r\n};\r\n\r\nexport default Post2;"]},"metadata":{},"sourceType":"module"}