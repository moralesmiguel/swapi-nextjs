{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\DeveloperSoftware\\\\HyperionDev\\\\Task41-42-NextJSII-III\\\\StarWarsRides\\\\pages\\\\post1.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout.js\";\nimport fetch from \"isomorphic-unfetch\";\nimport ReactTypingEffect from 'react-typing-effect';\n\nvar Post1 = function Post1(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"black-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"NAME:\", __jsx(ReactTypingEffect, {\n    staticText: \"{props.starship.name}\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }))));\n};\n\nPost1.getInitialProps = function _callee(context) {\n  var id, res, starship;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://swapi.co/api/starships/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          starship = _context.sent;\n          console.log(\"Fetched starship: \".concat(starship.name));\n          return _context.abrupt(\"return\", {\n            starship: starship\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post1;","map":{"version":3,"sources":["D:/DeveloperSoftware/HyperionDev/Task41-42-NextJSII-III/StarWarsRides/pages/post1.js"],"names":["Layout","fetch","ReactTypingEffect","Post1","props","getInitialProps","context","id","query","res","json","starship","console","log","name"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEA,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAC,uBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,CADJ,CADe;AAAA,CAAnB;;AAWAD,KAAK,CAACE,eAAN,GAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,EADc,GACRD,OAAO,CAACE,KADA,CACdD,EADc;AAAA;AAAA,2CAEFN,KAAK,0CAAmCM,EAAnC,EAFH;;AAAA;AAEdE,UAAAA,GAFc;AAAA;AAAA,2CAGGA,GAAG,CAACC,IAAJ,EAHH;;AAAA;AAGdC,UAAAA,QAHc;AAKpBC,UAAAA,OAAO,CAACC,GAAR,6BAAiCF,QAAQ,CAACG,IAA1C;AALoB,2CAOd;AAACH,YAAAA,QAAQ,EAARA;AAAD,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeR,KAAf","sourcesContent":["import Layout from \"../components/Layout.js\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n\r\nconst Post1 = props => (\r\n    <Layout>\r\n        <div className=\"black-background\">\r\n            <h1>\r\n                NAME:\r\n            <ReactTypingEffect staticText=\"{props.starship.name}\" />\r\n            </h1>\r\n        </div>\r\n    </Layout>\r\n);\r\n\r\nPost1.getInitialProps = async function(context) {\r\n    const{id} = context.query;\r\n    const res = await fetch(`https://swapi.co/api/starships/${id}`);\r\n    const starship = await res.json();\r\n\r\n    console.log(`Fetched starship: ${starship.name}`);\r\n\r\n    return{starship};\r\n};\r\n\r\nexport default Post1;"]},"metadata":{},"sourceType":"module"}